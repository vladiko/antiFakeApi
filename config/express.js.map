{"version":3,"file":"express.js","sourceRoot":"","sources":["express.ts"],"names":[],"mappings":";AAAA,IAAO,OAAO,WAAW,SAAS,CAAC,CAAC;AACpC,IAAO,MAAM,WAAW,QAAQ,CAAC,CAAC;AAClC,IAAO,QAAQ,WAAW,aAAa,CAAC,CAAC;AACzC,IAAO,UAAU,WAAW,aAAa,CAAC,CAAC;AAC3C,IAAO,OAAO,WAAW,iBAAiB,CAAC,CAAC;AAC5C,IAAY,QAAQ,WAAM,UAAU,CAAC,CAAA;AAErC,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,EAC5B,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAChD,MAAM,CAAC,OAAO,GAAG;IACb,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;IACpB,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,CAAC,CAAC,CAAC;QACzC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC;QAC/C,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IACxB,CAAC;IACD,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;QAC1B,QAAQ,EAAE,IAAI;KACjB,CAAC,CAAC,CAAC;IACJ,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;IAC1B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;QACZ,iBAAiB,EAAE,IAAI;QACvB,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,MAAM,CAAC,aAAa;KAC/B,CAAC,CAAC,CAAC;IAEJ,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;IAC/B,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;IAE5B,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;IAE9B,OAAO,CAAC,kCAAkC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACzD,OAAO,CAAC,iCAAiC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACxD,OAAO,CAAC,iCAAiC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACxD,OAAO,CAAC,qCAAqC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC5D,OAAO,CAAC,8BAA8B,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrD,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACpC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrB,MAAM,CAAC,GAAG,CAAC;AACf,CAAC,CAAC","sourcesContent":["import express = require('express');\r\nimport morgan = require('morgan');\r\nimport compress = require('compression');\r\nimport bodyParser = require('body-parser');\r\nimport session = require('express-session');\r\nimport * as passport from 'passport';\r\n\r\nvar config = require('./config'),\r\n    methodOverride = require('method-override');\r\nmodule.exports = function () {\r\n    var app = express();\r\n    if (process.env.NODE_ENV === 'development') {\r\n        app.use(morgan('dev'));\r\n        console.log('development');\r\n    } else if (process.env.NODE_ENV === 'production') {\r\n        app.use(compress());\r\n    }\r\n    app.use(bodyParser.urlencoded({\r\n        extended: true\r\n    }));\r\n    app.use(bodyParser.json());\r\n    app.use(methodOverride());\r\n    app.use(session({\r\n        saveUninitialized: true,\r\n        resave: true,\r\n        secret: config.sessionSecret\r\n    }));\r\n\r\n    app.use(passport.initialize());\r\n    app.use(passport.session());\r\n\r\n    var router = express.Router();\r\n\r\n    require('../app/routes/producer.routes.js')(app, router);\r\n    require('../app/routes/product.routes.js')(app, router);\r\n    require('../app/routes/itemKey.routes.js')(app, router);\r\n    require('../app/routes/fakeChecker.routes.js')(app, router);\r\n    require('../app/routes/user.routes.js')(app, router);\r\n    app.use(express.static('./public'));\r\n    app.use('/', router);\r\n    return app;\r\n};"]}