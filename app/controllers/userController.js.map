{"version":3,"file":"userController.js","sourceRoot":"","sources":["userController.ts"],"names":[],"mappings":"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","sourcesContent":["import * as passport from 'passport';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport * as express from 'express';\r\nimport authHelper = require('../services/authUsersHelper');\r\nvar config = require('../../config/config.js');\r\nimport userModel = require('../models/userModel');\r\nvar User = userModel.model;\r\nexport class UserController {\r\n    public static authUserHelper = new authHelper.AuthUsersHelper(20, 60000);\r\n    //public static requiresLogin: express.RequestHandler = (req, res, next) => {\r\n    //    if (!req.isAuthenticated()) {\r\n    //        return res.status(401).send({\r\n    //            message: 'User is not logged in'\r\n    //        });\r\n    //    }\r\n    //    next();\r\n    //};\r\n    public static checkLogin: express.RequestHandler = (req, res, next) => {\r\n        var username = req.query.username;\r\n        var usertoken: string = req.body.token || req.query.token;\r\n        var userEntry: authHelper.ActiveUserEntry;\r\n        if (username && usertoken) {\r\n            userEntry = UserController.authUserHelper.getUserEntry(username);\r\n        }\r\n        if (userEntry && userEntry.userToken == usertoken) {\r\n            req.user = userEntry.user;\r\n            next();\r\n        } else {\r\n            return res.status(401).send({\r\n                message: 'User is not logged in'\r\n            });\r\n        }\r\n    };\r\n\r\n    public static authorizeForUsers: express.RequestHandler = (req, res, next) => {\r\n        if (req.user) {\r\n            if (req.user.role == authHelper.UserAuthorizationRoles.SUPER_USER || req.user.role == authHelper.UserAuthorizationRoles.USERS_ADMIN) {\r\n                next();\r\n            } else {\r\n                return res.status(403).send({\r\n                    message: 'Forbidden'\r\n                });\r\n            }\r\n        } else {\r\n            return res.status(401).send({\r\n                message: 'User is not logged in'\r\n            });\r\n        }\r\n    };\r\n\r\n    public static list: express.RequestHandler = (req, res, next) => {\r\n        User.find({}, '-password -salt', (err, users) => {\r\n            if (err) {\r\n                return next(err);\r\n            } else {\r\n                res.json(users);\r\n            }\r\n        });\r\n    };\r\n\r\n    public static create: express.RequestHandler = (req, res, next) => {\r\n        var user = new User(req.body);\r\n        user.save((err) => {\r\n            if (err) {\r\n                return next(err);\r\n            } else {\r\n                res.json(user);\r\n            }\r\n        });\r\n    };\r\n\r\n    public static update: express.RequestHandler = (req, res, next) => {\r\n        User.findOne({ username: req.body.username }, function (err, user) {\r\n            var userToUpdate = user;\r\n            if (req.body.firstName.trim()) {\r\n                userToUpdate.firstName = req.body.firstName.trim();\r\n            }\r\n\r\n\r\n            if (req.body.lastName.trim()) {\r\n                userToUpdate.lastName = req.body.lastName.trim();\r\n            }\r\n\r\n            if (req.body.role.trim()) {\r\n                userToUpdate.role = req.body.role.trim();\r\n            }\r\n\r\n            if (req.body.email.trim()) {\r\n                userToUpdate.email = req.body.email.trim();\r\n            }\r\n\r\n            if (req.body.password.trim()) {\r\n                userToUpdate.password = req.body.password.trim();\r\n            }\r\n            if (req.body.provider.trim()) {\r\n                userToUpdate.provider = req.body.provider.trim();\r\n            } else {\r\n                if (!userToUpdate.provider.trim()) {\r\n                    userToUpdate.provider = 'local';\r\n                }\r\n            };\r\n            var userModel = <userModel.IUserModel>userToUpdate;\r\n            userModel.save((err) => {\r\n                if (err) {\r\n                    return next(err);\r\n                } else {\r\n                    res.json(userToUpdate);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    public static login: express.RequestHandler = (req, res, next) => {\r\n        passport.authenticate('local', (err, user, info) => {\r\n            if (err) {\r\n                return next(err);\r\n            } else if (!user) {\r\n                res.send({ gotToken: false, message: info.message });\r\n            } else {\r\n                req.user = user;\r\n                var token = jwt.sign('user.username' + 'user.password', config.jwtSecret);\r\n                UserController.authUserHelper.addUser(user, token);\r\n                res.send({ gotToken: true, token: token });\r\n            }\r\n\r\n        })(req, res, next);\r\n    };\r\n\r\n    public static logout: express.RequestHandler = (req, res, next) => {\r\n        if (req.user) {\r\n            UserController.authUserHelper.removeUser((<userModel.IUserModel>req.user).username);\r\n            res.json({ logout: (<userModel.IUserModel>req.user).username });\r\n        } else {\r\n            next(new Error());\r\n        }\r\n    }\r\n}\r\n"]}