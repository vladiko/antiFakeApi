{"version":3,"file":"producer.controller.js","sourceRoot":"","sources":["producer.controller.ts"],"names":[],"mappings":";AAEA,IAAO,aAAa,WAAW,yBAAyB,CAAC,CAAC;AAC1D,IAAI,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC;AAEnC;IAAA;IA4BA,CAAC;IA3BiB,gCAAa,GAA2B,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QACjE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,OAAO,EAAE,uBAAuB;aACnC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,EAAE,CAAC;IACX,CAAC,CAAC;IACY,uBAAI,GAA2B,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QACxD,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,UAAC,GAAG,EAAE,SAAyC;YAC7D,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACY,yBAAM,GAA2B,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QAC1D,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,UAAC,GAAG;YACd,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAA;IACL,yBAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,0BAAkB,qBA4B9B,CAAA;AACD,oBAAoB;AAEpB,GAAG","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport * as express from 'express';\r\nimport producerModel = require('../models/producerModel');\r\nvar producer = producerModel.model;\r\n\r\nexport class ProducerController {\r\n    public static requiresLogin: express.RequestHandler = (req, res, next) => {\r\n        if (!req.isAuthenticated()) {\r\n            return res.status(401).send({\r\n                message: 'User is not logged in'\r\n            });\r\n        }\r\n        next();\r\n    };\r\n    public static list: express.RequestHandler = (req, res, next) => {\r\n        producer.find({}, (err, producers: producerModel.IProducerModel[]) => {\r\n            if (err) {\r\n                return next(err);\r\n            } else {\r\n                res.json(producers);\r\n            }\r\n        });\r\n    };\r\n    public static create: express.RequestHandler = (req, res, next) => {\r\n        var producer = new producer(req.body);\r\n        producer.save((err) => {\r\n            if (err) {\r\n                return next(err);\r\n            } else {\r\n                res.json(producer);\r\n            }\r\n        });\r\n    }\r\n}\r\n//module.exports = {\r\n\r\n//}"]}