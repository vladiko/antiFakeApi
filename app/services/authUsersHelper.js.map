{"version":3,"file":"authUsersHelper.js","sourceRoot":"","sources":["authUsersHelper.ts"],"names":[],"mappings":"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","sourcesContent":["export class ActiveUserEntry {\r\n    constructor(public user: any, public userToken: string, public logoutTime: Date) { }\r\n}\r\n\r\nexport enum UserAuthorizationRoles {\r\n    SUPER_USER = 100,\r\n    USERS_ADMIN = 90,\r\n    PRODUCERS_ADMIN = 80,\r\n    PRODUCERS_KEY_CREATOR = 70\r\n}\r\n\r\nexport class AuthUsersHelper {\r\n    private users\r\n    public tokenTimeout = 20;\r\n    public checkInterval = 60000;\r\n\r\n    private getUserTimeoutTime(): Date {\r\n        var timeoutMinutesLater = new Date();\r\n        timeoutMinutesLater.setMinutes(timeoutMinutesLater.getMinutes() + this.tokenTimeout);\r\n        return timeoutMinutesLater;\r\n    }\r\n\r\n    public addUser(user: any, token) {\r\n        this.users[user.username] = new ActiveUserEntry(user, token, this.getUserTimeoutTime());\r\n    }\r\n\r\n    public removeUser(userName: string) {\r\n        delete this.users[userName];\r\n    }\r\n\r\n    public getUserEntry(userName: string, updateTimeout: boolean = true): ActiveUserEntry {\r\n        var retEntry: ActiveUserEntry = this.users[userName];\r\n        if (retEntry && updateTimeout) {\r\n            retEntry.logoutTime = this.getUserTimeoutTime();\r\n        }\r\n        return retEntry\r\n    }\r\n\r\n    public updateActiveTokens() {\r\n        var keys = Object.keys(this.users);\r\n        var keysToRemove: string[] = [];\r\n        var now = Date.now();\r\n        for (var ind = 0; ind < keys.length; ind++) {\r\n            if ((<Date>this.users[keys[ind]].logoutTime).getTime() < now) {\r\n                keysToRemove.push(keys[ind]);\r\n            }\r\n        }\r\n        for (var ind = 0; ind < keysToRemove.length; ind++) {\r\n            delete this.users[keysToRemove[ind]];\r\n        }\r\n    }\r\n\r\n    constructor(timeout?: number, checkingInterval?: number) {\r\n        if (timeout) {\r\n            this.tokenTimeout = timeout;\r\n        }\r\n        if (checkingInterval) {\r\n            this.checkInterval = checkingInterval;\r\n        }\r\n        this.users = Object.create(null);\r\n        setInterval(() => {\r\n            this.updateActiveTokens();\r\n        }, this.checkInterval);\r\n    }\r\n}\r\n"]}