{"version":3,"file":"user.routes.js","sourceRoot":"","sources":["user.routes.ts"],"names":[],"mappings":";AAAA,IAAO,KAAK,WAAW,sCAAsC,CAAC,CAAC;AAE/D,MAAM,CAAC,OAAO,GAAG,UAAC,GAAG;IACjB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;SACb,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,iBAAiB,EAAE,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;SAC1G,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,iBAAiB,EAAE,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;SACvG,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,iBAAiB,EAAE,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC/G,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACtC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC;SACpB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;SAClE,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACvE,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC;SAClB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,iBAAiB,EAAE,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC9G,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC;SACvB,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC,cAAc,CAAC,iBAAiB,EAAE,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IACnH,IAAI,YAAY,GAAG,UAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;QACnC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IACtD,CAAC,CAAC;IACF,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACnC,CAAC,CAAC","sourcesContent":["import users = require('../../app/controllers/userController');\r\n\r\nmodule.exports = (app) => {\r\n    app.route('/user')\r\n        .post(users.UserController.checkLogin, users.UserController.authorizeForUsers, users.UserController.create)\r\n        .get(users.UserController.checkLogin, users.UserController.authorizeForUsers, users.UserController.list)\r\n        .put(users.UserController.checkLogin, users.UserController.authorizeForUsers, users.UserController.update);\r\n    app.route('/user/login')\r\n        .post(users.UserController.login);\r\n    app.route('/user/logout')\r\n        .post(users.UserController.checkLogin, users.UserController.logout)\r\n        .get(users.UserController.checkLogin, users.UserController.logout);\r\n    app.route('/user/list')\r\n        .post(users.UserController.checkLogin, users.UserController.authorizeForUsers, users.UserController.list);\r\n    app.route('/user/:username')\r\n        .delete(users.UserController.checkLogin, users.UserController.authorizeForUsers, users.UserController.destroy);\r\n    var errorHandler = (err, req, res, next) => {\r\n        console.error(err);\r\n        res.status(500).send('Something broke in users!');\r\n    };\r\n    app.use('/user', errorHandler);\r\n};"]}