{"version":3,"file":"userList.js","sourceRoot":"","sources":["userList.ts"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,IAAU,cAAc,CA2CvB;AA3CD,WAAU,cAAc,EAAC,CAAC;IACtB,YAAY,CAAA;IACZ,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAEnC;QAAA;YACI,eAAU,GAAa,iBAAiB,CAAC;YACzC,gBAAW,GAAG,6CAA6C,CAAC;YAC5D,iBAAY,GAAG,IAAI,CAAC;QACxB,CAAC;QAAD,eAAC;IAAD,CAAC,AAJD,IAIC;IAED,qBAAqB;IACrB,eAAe;IACf,gBAAgB;IAChB,GAAG;IAEH;QAuBI,2BAAoB,oBAAyC;YAAzC,yBAAoB,GAApB,oBAAoB,CAAqB;YACzD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;QAvBD,qCAAqC;QACrC,qDAAqD;QACrD,mCAAmC;QACnC,GAAG;QAEH,4DAA4D;QAC5D,2CAA2C;QAC3C,+BAA+B;QAC/B,GAAG;QACI,2CAAe,GAAtB;YAAA,iBAEC;YADG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,0BAAW,CAAC,QAAQ,EAAE,0BAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,IAAO,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC;QAC1H,CAAC;QAEM,mCAAO,GAAd,UAAe,IAAI;YAAnB,iBAIC;YAHG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC;gBACxD,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG,IAAO,CAAC,CAAC,CAAC;QAC3B,CAAC;QAGM,yBAAO,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAI9C,wBAAC;IAAD,CAAC,AA1BD,IA0BC;IACD,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,QAAQ,EAAE,CAAC,CAAC;AAC9C,CAAC,EA3CS,cAAc,KAAd,cAAc,QA2CvB","sourcesContent":["/// <reference path=\"../../../../../_clientRefernces.ts\" />\r\nnamespace antiFakeClient {\r\n    'use strict'\r\n    let app = angular.module('client');\r\n\r\n    class UserList implements ng.IComponentOptions {\r\n        controller: Function = UserListViewModel;\r\n        templateUrl = 'src/components/users/userList/userList.html';\r\n        controllerAs = 'vm';\r\n    }\r\n\r\n    //enum UsersScreens {\r\n    //    UserList,\r\n    //    AddNewUser\r\n    //}\r\n\r\n    class UserListViewModel implements ng.IComponentController {\r\n        public userList;\r\n        //public UsersScreens = UsersScreens;\r\n        //public getViewName(viewNum: UsersScreens): string {\r\n        //    return UsersScreens[viewNum];\r\n        //}\r\n\r\n        //public selectedView: UsersScreens = UsersScreens.UserList;\r\n        //public select = (view: UsersScreens) => {\r\n        //    this.selectedView = view;\r\n        //}\r\n        public refreshUserList() {\r\n            this._communictionService.getAllUsers(CurrentUser.userName, CurrentUser.userToken).then((a) => { this.userList = a });\r\n        }\r\n\r\n        public destroy(user) {\r\n            this._communictionService.destroyUser(user.username).then((s) => {\r\n                this.refreshUserList();\r\n            }).catch((err) => { });\r\n        }\r\n\r\n\r\n        static $inject = ['communicationService'];\r\n        constructor(private _communictionService: CommunictionService) {\r\n            this.refreshUserList();\r\n        }\r\n    }\r\n    app.component('userList', new UserList());\r\n}"]}